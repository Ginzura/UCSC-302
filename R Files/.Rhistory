1+2
source("~/Class.R")
seq(11:60)
max(4,5,
3)
gc()
#q()
#help.start()
help(hist)
#q()
#help.start()
#help(func_name)
#example(func_name)
#args(func_name)
#help.search(item)
vignette(pacage="ggplot2")
#q()
#help.start()
#help(func_name)
#example(func_name)
#args(func_name)
#help.search(item)
vignette(package="ggplot2")
vignette("gglot-specs")
vignette("ggplot-specs")
vignette("ggplot2-specs")
class(2)
class(2L)
class(2.3)
class(2.3L)
typeof(3)
typeof(2.5)
typeof(2672478725098)
lengths(2157413866497)
lengths(2157413866497.2348)
length(2157413866497.2348)
attributes(531487)
attributes("sairam")
length("sairam")
length("sairam hi")
length("sairam hi")
length(Sairam)
help("length")
print(cat("the value of pi",pi,"with decimals","\n"))
cat("the value of pi",pi,"with decimals","\n")
sqrt(2)
x<-3
x
logical(5)
logical(TRue)
class(5)
class(5)
class(5)
class(5)
```{r}
class(5)
```{r}
```{r}
```{r}
Add a new chunk by clicking the *Insert Chunk* button on the toolbar or by pressing *Ctrl+Alt+I*.
```{r}
class(5)
class(5)
class(5)
gc()
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
1+2
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
print(5)
x="sairam"
print(x)
cat(x)
print(cat(x))
vignette(package="ggplot2")
help("vignette")
vignette(package="ggplot2")
vignette("ggplot2-specs")
print(cat("the value of pi",pi,"with decimals","\n"))
help(cat)
cat("sai","ram","jai","sai")
cat("sai",5,"ram","jai",10,"sai")
print(cat("sai",5,"ram","jai",10,"sai"))
cat("sai",5,"ram","jai",10,"\n","sai")
cat("sai",5,"ram","jai",10,"\t","sai")
nchar("sairam hi there")
length("sairam hi there")
help("length")
x=seq(11:30)
length(x)
x<-3
y<-5
print(sqrt(x^2+y^3))
x
x=5
x
x+y
y=7
x+y
x<<-5
x
x=9
x
x<<-89
x
help(<<)
ls(x)
help(ls)
ls()
ls.str()
z<-"sairam"
ls.str()
v=5.78
ls.str()
rm(list= ls())
ls()
ls.str()
a<-vector():a
a<-vector():a
b<-vector("logical",length=3):b
b<-vector("logical",length=3)
bn
b
vec4=(vec2as.character("3"))
vec1
vec1=c(1,2,5)
vec1
vec2=c("sun","moon")
vec2
vec3=c(vec1,vec2)
vec3
typeof(vec3)
typeof(vec10
typeof(vec10)
typeof(vec1)
class(ve1)
class(vec1)
a<-c(1,0,as.logical(3))
a
help(as)
vec4=(vec2as.character("3"))
vec4=(vec2 as.character("3"))
vec2
vec4
vec4=(vec2 as.character("3"))
vec4=(vec2,as.character("3"))
vec4=(vec2as.character("3"))
1:10 %>% mean()
library(magrittr)
1:10 %>% mean()
pi %>% round(3)
3 %>% round(pi, digits=.)
x<-seq(1:10)
mx=max(x)
mx
mx %>% max(2,.)
x=sc()
x=c()
mx %>% max(20,.)
mx=89
mx %>% max(20,.)
paste(10:15,letters[10:15])
10:15 %>% paste(.,letters[.])
help("paste")
10:15 %>% cat(.,letters[.])
10:15 %>% paste(.,letters[.])
sin(cos(90))
(((((cos(90))))))
sin(((((cos(90))))))
{sin(((((cos(90))))))}
sin{cos{90}}
f<- . %>% cos() %>% sin()
f
f<- . %>% cos() %>% sin()
f
f(90)
sin(1)
cos(90)
a,-10
a<-10
a=sqrt(a)
a
a<- a %>% sqrt()
a
a=10
a<- a %>% sqrt()
a
a=10
a%<>%sqrt
a
f%<>%cos()%<>%sin()
f(90)
f%<>%cos()%<>%sin
f<-.%<>%cos()%<>%sin
f(90)
l<-.%<>%cos()%<>%sin
l(90)
l<-.%<>%cos%<>%sin
l(90)
90<-.%<>%cos%<>%sin
90%<>%cos%<>%sin
m<-.%<>%cos%<>%sin
m(90)
m<-.%<>%cos%<>%sin
m(90)
cos(pi)
cos(pi/2)
cos(pi//2)
cos(pi%2)
3%2
mod(3)
help(%)
help(mod)
3%%2
5 %in% seq(1:20)
5 %in% seq(7:20)
10:15 %>% paste(.,letters[.])
x=c(1,5,3,76,4,3,356,3,6)
mean(x)
median(x)
sd(x)
var(x)
cor(x)
cov(x,log(x+1))
cor(x,log(x+1))
marks<-c(75,85,95)
names(marks)<-c("chem","phy","math")
marks
marks["chem"]
help(names)
z <- 1:3
names(z)
## assign just one name
names(z)[2] <- "b"
z
table(x)
table(x,y)
help("table")
summary(x)
v=summary(x)
names(v)[2] <- "b"
v
names(v)[4] <- "Arithmetic Mean"
names(v)[2] <- "1st Quartile"
v
seq(2:4,7:90)
seq(2:7)
seq(2:7,8:10)
help(seq)
letters(7:26)
letters
letters(1:4)
letters[1:4]
x=readline()
4
x
x=readline()
x
x=scan()
v=summary(x)
v
names(v)[4]<-"Arithmetic mean"
v
1:10 %>% mean()
plot(x)
ggplot(x)
ggplot(cars)
ggplot(cars)
plot(cars)
help("function")
## An anonymous function:
(function(x, y){ z <- x^2 + y^2; x+y+z })(0:7, 1)
## An anonymous function:
(function(x, y){ z <- x^2 + y^2; x+y+z })(0:7, 1)
norm <- function(x) sqrt(x%*%x)
print(norm(1:4))
#An anonymous function:
(function(x, y){ z <- x^2 + y^2; x+y+z })(1, 2)
#An anonymous function:
(function(x, y){ z <- x^2 + y^2; x+y+z })(1, 1)
#An anonymous function:
(function(x, y){ z <- x^2 + y^2; x+y+z })(5, 5)
#An anonymous function:
(function(x, y){ z <- x^2 + y^2;})(5, 5)
#An anonymous function:
(function(x, y){ z <- x^2 + y^2;x+y})(5, 5)
#An anonymous function:
(function(x, y){ z <- x^2 + y^2})(5, 5)
Ar(3,4,5,6)
Ar <- function(s,a,b,c)
{(s(s-a)(s-b)(s-c))^1/2}
Ar(3,3,4,5)
Ar(3,4,5,6)
print(Ar(3,4,5,6))
Ar <- function(s,a,b,c)
{(s(s-a)(s-b)(s-c))^1/2}
print(Ar(3,4,5,6))
print(Ar(3,4,5,6))
Ar <- function(s,a,b,c)
{(s*(s-a)*(s-b)*(s-c))^1/2}
print(Ar(3,4,5,6))
print(Ar(4,5,6))
Ar <- function(a,b,c)
{(s*(s-a)*(s-b)*(s-c))^1/2;s=(a+b+c)/2}
print(Ar(4,5,6))
Ar <- function(s,a,b,c)
{(s*(s-a)*(s-b)*(s-c))^1/2}
print(Ar(a,b,c))
print(a,b,c)
a<-readline(prompt = "Enter your first name: ")
c<-readline(prompt = "Enter your first name: ")
2
3
print(a,b,c)
print(a,b,c)
print(a,b,c)
ls.remove()
print(a,b,c)
#print(Ar(a,b,c))
#print(a,b,c)
#print(a,b,c)
#print(a,b,c)
#print(a,b,c)
#print(a,b,c)
#print(a,b,c)
print(Ar(2,3,4,6))
print(Ar(a,b,c))
Ar <- function(a,b,c)
{(s*(s-a)*(s-b)*(s-c))^1/2}
print(Ar(a,b,c))
Ar <- function(global s,a,b,c)
Ar <- function(a,b,c)
{(s*(s-a)*(s-b)*(s-c))^1/2;s=(a+b+c)/2}
print(Ar(a,b,c))
print(Ar(a,b,c))
Ar <- function(a,b,c)
{(s=(a+b+c)/2; s*(s-a)*(s-b)*(s-c))^1/2}
Ar <- function(a,b,c)
{(s=(a+b+c)/2 s*(s-a)*(s-b)*(s-c))^1/2}
print(Ar(a,b,c))
Ar <- function(a,b,c)
{(a+b+c)/2*((a+b+c)/2-a)*((a+b+c)/2-b)*((a+b+c)/2-c))^1/2}
Ar <- function(a,b,c)
{(a+b+c)/2*((a+b+c)/2-a)*((a+b+c)/2-b)*((a+b+c)/2-c)^1/2}
print(Ar(a,b,c))
print(Ar(4,5,6))
4^1/2
Ar <- function(a,b,c)
{((a+b+c)/2*((a+b+c)/2-a)*((a+b+c)/2-b)*((a+b+c)/2-c))^1/2}
print(Ar(4,5,6))
a+b+c
4+5+6
a<-4
b<-5
c<-6
Ar(4,5,6)
Ar(a,b,c)
a+b+c/2
(a+b+c)/2
Ar <- function(a,b,c)
{((a+b+c)/2*((a+b+c)/2-a)*((a+b+c)/2-b)*((a+b+c)/2-c))^(1/2)}
print(Ar(4,5,6))
c<-readline(prompt = "Enter your first name: ")
Ar <- function(a,b,c)
{((a+b+c)/2*((a+b+c)/2-a)*((a+b+c)/2-b)*((a+b+c)/2-c))^(1/2)}
source("F:/2-UG MCS/funtion.R")
source("F:/2-UG MCS/funtion.R")
source("F:/2-UG MCS/funtion.R")
source("F:/2-UG MCS/funtion.R")
source("F:/2-UG MCS/funtion.R")
source("F:/2-UG MCS/funtion.R")
source("F:/2-UG MCS/Practice.R", echo=TRUE)
source("F:/2-UG MCS/Practice.R", echo=TRUE)
source("F:/2-UG MCS/Practice.R", echo=TRUE)
source("F:/2-UG MCS/Practice.R", echo=TRUE)
source("F:/2-UG MCS/Practice.R", echo=TRUE)
source("F:/2-UG MCS/Practice.R", echo=TRUE)
source("F:/2-UG MCS/Practice.R", echo=TRUE)
source("F:/2-UG MCS/Practice.R", echo=TRUE)
source("F:/2-UG MCS/Practice.R", echo=TRUE)
source("F:/2-UG MCS/Practice.R")
source("F:/2-UG MCS/Practice.R")
source("F:/2-UG MCS/Practice.R")
source("F:/2-UG MCS/Practice.R")
source("F:/2-UG MCS/Practice.R")
source("F:/2-UG MCS/Practice.R", echo=TRUE)
source("F:/2-UG MCS/Practice.R", echo=TRUE)
source("F:/2-UG MCS/Practice.R", echo=TRUE)
source("F:/2-UG MCS/Practice.R", echo=TRUE)
source("F:/2-UG MCS/Practice.R")
source("F:/2-UG MCS/Practice.R")
source("F:/2-UG MCS/Practice.R", echo=TRUE)
source("F:/2-UG MCS/Practice.R", echo=TRUE)
source("F:/2-UG MCS/Practice.R")
source("F:/2-UG MCS/Practice.R")
source("F:/2-UG MCS/Practice.R")
source("F:/2-UG MCS/Practice.R")
source("F:/2-UG MCS/Practice.R", echo=TRUE)
print(4,"hi")
print(4,"hi")
cat(4,"hi")
source("F:/2-UG MCS/Practice.R", echo=TRUE)
source("F:/2-UG MCS/Practice.R")
source("F:/2-UG MCS/Practice.R")
source("F:/2-UG MCS/Practice.R")
source("F:/2-UG MCS/Practice.R")
gc()
gc()
1:10
x<-scan(n=3)
plot(x)
y<-scan(n=3)
plot(x,y)
plot(x,y,x)
z<-scan(n=3)
plot(x,y,z)
plot(x,z)
source("F:/2-UG MCS/function.R")
#s=a+b+c/2
#Area = SquareRoot(s*(s-a)*(s-b)*(s-c))
#Input: a,b,c as numbers
#Output: Area of the Triangle
a<-as.numeric(readline(prompt = "Enter your first number: "))
b<-as.numeric(readline(prompt = "Enter your first number: "))
c<-as.numeric(readline(prompt = "Enter your first number: "))
Ar <- function(a,b,c)
{((a+b+c)/2*((a+b+c)/2-a)*((a+b+c)/2-b)*((a+b+c)/2-c))^(1/2)}
print(Ar(a,b,c))
mean(2:4)
mean(2,4)
seq(2:4)
seq(2,4)
setwd("F:/2-UG MCS")
par(mfrow=c(2,3))
dev.cur()
dev.off()
dev.off()
par(mfrow=c(2,3))
help("par")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
# Add margin using par() function
par( mar= c(1,10,10,1) )
# create plot
plot( 1:20 )
source("F:/2-UG MCS/Par Function.R")
dev.off()
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
dev.off()
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
plot( 1:10 )
source("F:/2-UG MCS/Par Function.R")
dev.off()
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
dev.off()
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
View(layout_matrix_1)
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
dev.off()
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
dev.off()
dev.cur()
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
View(pie)
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
# Plot the chart.
pie(x,labels,main="f")
source("F:/2-UG MCS/Par Function.R")
library(plotrix)
install.packages(plotrix)
install.packages("plotrix")
library(plotrix)
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
source("F:/2-UG MCS/Par Function.R")
install.packages("rvest")
install.packages("rvest")
source("F:/2-UG MCS/Par Function.R")
